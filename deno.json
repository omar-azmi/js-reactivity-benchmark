{
  "name": "js-reactivity-benchmark",
  "version": "1.1.0",
  "license": "ISC",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/omar-azmi/js-reactivity-benchmark.git"
  },
  "bugs": {
    "url": "https://github.com/omar-azmi/js-reactivity-benchmark/issues"
  },
  "imports": {
    "@amadeus-it-group/tansu": "npm:@amadeus-it-group/tansu@^2.0.0",
    "@angular/core": "npm:@angular/core@^20.3.6",
    "@oazmi/esbuild-plugin-deno": "jsr:@oazmi/esbuild-plugin-deno@^0.4.4",
    "@oazmi/kitchensink": "jsr:@oazmi/kitchensink@0.9.14",
    "@preact/signals": "npm:@preact/signals@^2.3.2",
    "@reactively/core": "npm:@reactively/core@^0.0.8",
    "@solidjs/signals": "npm:@solidjs/signals@^0.7.3",
    "@std/assert": "jsr:@std/assert@^1.0.15",
    "@vue/reactivity": "npm:@vue/reactivity@^3.5.22",
    "alien-signals": "npm:alien-signals@^2.0.8",
    "compostate": "npm:compostate@^0.6.0-alpha.1",
    "esbuild": "npm:esbuild@0.25.5",
    "mobx": "npm:mobx@^6.15.0",
    "mol_wire_lib": "npm:mol_wire_lib@^1.0.1574",
    "oby": "npm:oby@^15.1.2",
    "pota": "npm:pota@^0.19.206",
    "preact": "npm:preact@^10.27.2",
    "s-js": "npm:s-js@^0.4.9",
    "signal-polyfill": "npm:signal-polyfill@^0.2.2",
    "solid-js": "npm:solid-js@^1.9.9",
    "svelte": "npm:svelte@^5.41.1",
    "usignal": "npm:usignal@^0.10.0"
  },
  "exports": {
    ".": "./src/index.ts"
  },
  "nodeModulesDir": "auto",
  "test": { "include": ["./src/index.ts", "/src/**/*.test.ts"] },
  "fmt": {
    "useTabs": false,
    "indentWidth": 2,
    "semiColons": false,
    "singleQuote": false,
    "lineWidth": 800,
    "proseWrap": "preserve",
    "include": [
      "./src/",
      "./**/*.json",
      "./**/*.jsonc",
      "./**/*.js",
      "./**/*.ts",
      "./**/*.md",
      "./**/*.toml"
    ]
  },
  "compilerOptions": {
    "lib": [
      "esnext",
      "dom",
      "deno.ns"
    ],
    "strict": true,
    "allowJs": true
  },
  "buildDist": {
    "dir": "./dist/",
    "log": "verbose",
    "minify": "syntax",
    "split": false,
    "passes": 1,
    "transform": [
      {
        "pattern": "./**/*.js",
        "loader": "js",
        "options": {
          "minifySyntax": true,
          "platform": "browser",
          "format": "esm",
          "target": "esnext"
        }
      }
    ],
    "esbuild": {
      "chunkNames": "chunks/[hash]",
      "minifySyntax": true,
      "external": []
    }
  },
  "buildDocs": {
    "dir": "./docs/",
    "log": "verbose",
    "copy": [
      ["./readme.md", "./readme.md"],
      ["./src/", "./src/"]
    ]
  },
  "buildNpm": {
    "dir": "./npm/",
    "log": "verbose",
    "install": true
  },
  "tasks": {
    "run-benchmark": {
      "command": "deno run --allow-env=NODE_ENV \"./scripts/run_benchmark.ts\""
    },
    "build-web": {
      "command": "deno run -A \"./scripts/build_web.ts\""
    },
    "build-dist": {
      "command": "deno run -A \"jsr:@oazmi/build-tools@0.3.0/cli/dist\" --config=\"./deno.json\"",
      "description": "transpiles the library to minified esm-distributable javascript multi-entry source code.\nuses the `buildDist` field in `deno.json` for configuration.\ndepends on `npm:esbuild` and `jsr:@oazmi/build-tools`."
    },
    "build-docs": {
      "command": "deno run -A \"jsr:@oazmi/build-tools@0.3.0/cli/docs\" --config=\"./deno.json\"",
      "description": "generates github-pages compatible documentation site for the library.\nuses the `buildDocs` field in `deno.json` for configuration.\ndepends on `npm:typedoc` and `jsr:@oazmi/build-tools`."
    },
    "build-npm": {
      "command": "deno run -A \"jsr:@oazmi/build-tools@0.3.0/cli/npm\" --config=\"./deno.json\"",
      "description": "converts the library code to a nodejs compatible project.\nuses the `buildNpm` field in `deno.json` for configuration.\ndepends on `jsr:@deno/dnt` and `jsr:@oazmi/build-tools`."
    },
    "build-npm-dist": {
      "command": "cd \"./npm/\" && npm run build-dist",
      "description": "generates minified distributable code out of the node-converted project generated by the `build-npm` task."
    },
    "local-server": {
      "command": "deno run --allow-net --allow-read \"jsr:@std/http/file-server\" \"./web-dist/\"",
      "description": "run a basic local file server, possibly for checking the generated docs or interactive examples."
    },
    "clean": {
      "command": "deno run -A \"./clean.ts\"",
      "description": "clean the project by deleting known polutant files and directories."
    },
    "test": {
      "command": "deno test --no-check --allow-env",
      "description": "run typescript validity test on source code, and evaluate the unit tests in the `./test/` directory."
    },
    "test-doc": {
      "command": "deno test -A --doc \"./src/**\"",
      "description": "evaluate the documentation comment tests and examples inside of the source code."
    }
  }
}
